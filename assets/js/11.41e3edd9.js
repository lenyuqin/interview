(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{418:function(t,s,a){"use strict";a.r(s);var e=a(21),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_8大基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8大基本数据类型"}},[t._v("#")]),t._v(" 8大基本数据类型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img.xiaoyou66.com/2021/03/20/27fca3ce4c8e4.png",alt:"图片"}})]),t._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),a("p",[t._v("用途：")]),t._v(" "),a("blockquote",[a("p",[t._v("适用于简单key-value存储、setnx key value实现分布式锁、计数器(原子性)、分布式全局唯一ID。")])]),t._v(" "),a("p",[a("strong",[t._v("底层")]),t._v("：C语言中String用char[]数组表示，源码中用"),a("code",[t._v("SDS")]),t._v("(simple dynamic string)封装char[]，这是是Redis存储的"),a("code",[t._v("最小单元")]),t._v("，一个SDS最大可以存储512M信息。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sdshdr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记char[]的长度")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" free"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//标记char[]中未使用的元素个数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存放元素的坑")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("Redis对SDS再次封装生成了"),a("code",[t._v("RedisObject")]),t._v("，核心有两个作用：")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("说明是5种类型哪一种。")]),t._v(" "),a("li",[t._v("里面有指针用来指向 SDS。")])])]),t._v(" "),a("p",[t._v("当你执行"),a("code",[t._v("set name sowhat")]),t._v("的时候，其实Redis会创建两个RedisObject对象，键的RedisObject 和 值的RedisOjbect 其中它们type = REDIS_STRING，而SDS分别存储的就是 name 跟 sowhat 字符串咯。")]),t._v(" "),a("p",[t._v("并且Redis底层对SDS有如下优化：")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("SDS修改后大小 > 1M时 系统会多分配空间来进行"),a("code",[t._v("空间预分配")]),t._v("。")]),t._v(" "),a("li",[t._v("SDS是"),a("code",[t._v("惰性释放空间")]),t._v("的，你free了空间，可是系统把数据记录下来下次想用时候可直接使用。不用新申请空间。")])])]),t._v(" "),a("h3",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicdleKtF3rSw0s7qBoxq2ChknlXQocEPkEqicpiaqoAhuZ6dGjJvn7Tb8Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),t._v("查看源码底层 "),a("code",[t._v("adlist.h")]),t._v(" 会发现底层就是个 "),a("strong",[t._v("双端链表")]),t._v("，该链表最大长度为2^32-1。常用就这几个组合。")]),t._v(" "),a("blockquote",[a("p",[t._v("lpush + lpop = stack 先进后出的栈")]),t._v(" "),a("p",[t._v("lpush + rpop = queue 先进先出的队列")]),t._v(" "),a("p",[t._v("lpush + ltrim = capped collection 有限集合")]),t._v(" "),a("p",[t._v("lpush + brpop = message queue 消息队列")])]),t._v(" "),a("h3",{attrs:{id:"hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" Hash")]),t._v(" "),a("p",[t._v("散列非常适用于将一些相关的数据存储在一起，比如用户的购物车。该类型在日常用途还是挺多的。")]),t._v(" "),a("p",[t._v("这里需要明确一点：Redis中只有一个K，一个V。其中 K 绝对是字符串对象，而 V 可以是String、List、Hash、Set、ZSet任意一种。")]),t._v(" "),a("p",[t._v("hash的底层主要是采用字典dict的结构，整体呈现层层封装。从小到大如下：")]),t._v(" "),a("h4",{attrs:{id:"dictentry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dictentry"}},[t._v("#")]),t._v(" dictEntry")]),t._v(" "),a("blockquote",[a("p",[t._v("真正的数据节点，包括key、value 和 next 节点。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicSmO2YequSYVWCbRaYxsLziaVHBIcqjhxzSO53Ra1icW1gSnicytaTU1gA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h4",{attrs:{id:"dictht"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dictht"}},[t._v("#")]),t._v(" dictht")]),t._v(" "),a("blockquote",[a("p",[t._v("1、数据 dictEntry 类型的数组，每个数组的item可能都指向一个链表。")]),t._v(" "),a("p",[t._v("2、数组长度 size。")]),t._v(" "),a("p",[t._v("3、sizemask 等于 size - 1。")]),t._v(" "),a("p",[t._v("4、当前 dictEntry 数组中包含总共多少节点。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRictDslPRoCZ9eo1Jyd1cI5TjGEKQ9zBpS7rKV1G1x0NHnrjqeA51NVWg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h4",{attrs:{id:"dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dict"}},[t._v("#")]),t._v(" dict")]),t._v(" "),a("blockquote",[a("p",[t._v("1、dictType 类型，包括一些自定义函数，这些函数使得key和value能够存储")]),t._v(" "),a("p",[t._v("2、rehashidx 其实是一个标志量，如果为"),a("code",[t._v("-1")]),t._v("说明当前没有扩容，如果"),a("code",[t._v("不为 -1")]),t._v(" 则记录扩容位置。")]),t._v(" "),a("p",[t._v("3、dictht数组，两个Hash表。")]),t._v(" "),a("p",[t._v("4、iterators 记录了当前字典正在进行中的迭代器")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRiceHpj6ByMtiaHicXibk2Gib0CicxJFCL79Tfzadbpt7S7k6R289ib8dp0rv1A/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[a("strong",[t._v("组合后结构就是如下")]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicO2vGDPPL75yR6J0hNetEmJCR5GDNrfPbhLOTiaC9IcEO0Tnoc6GrWsQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h3",{attrs:{id:"渐进式扩容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渐进式扩容"}},[t._v("#")]),t._v(" 渐进式扩容")]),t._v(" "),a("p",[t._v("为什么 dictht ht[2]是两个呢？"),a("strong",[t._v("目的是在扩容的同时不影响前端的CURD")]),t._v("，慢慢的把数据从ht[0]转移到ht[1]中，同时"),a("code",[t._v("rehashindex")]),t._v("来记录转移的情况，当全部转移完成，将ht[1]改成ht[0]使用。")]),t._v(" "),a("p",[t._v("rehashidx = -1说明当前没有扩容，rehashidx != -1则表示扩容到数组中的第几个了。")]),t._v(" "),a("p",[t._v("扩容之后的数组大小为大于used*2的"),a("strong",[t._v("2的n次方")]),t._v("的最小值，跟 "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4NjI1OTI4Nw==&mid=2247485513&idx=1&sn=340e879f3197ae9e3d8789a1ad55a76e&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1),t._v(" 类似。然后挨个遍历数组同时调整rehashidx的值，对每个dictEntry[i] 再挨个遍历链表将数据 Hash 后重新映射到 dictht[1]里面。并且 "),a("strong",[t._v("dictht[0].use")]),t._v(" 跟 "),a("strong",[t._v("dictht[1].use")]),t._v(" 是动态变化的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicnAYFia6e6tnNjwW51AIibvibQKdicDKwOFmPDIUVOS5jobkj2iaTFX7bxfg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),t._v("整个过程的重点在于"),a("code",[t._v("rehashidx")]),t._v("，其为第一个数组正在移动的下标位置，如果当前内存不够，或者操作系统繁忙，扩容的过程可以随时停止。")]),t._v(" "),a("p",[t._v("停止之后如果对该对象进行操作，那是什么样子的呢？")]),t._v(" "),a("blockquote",[a("p",[t._v("1、如果是新增，则直接新增后第二个数组，因为如果新增到第一个数组，以后还是要移过来，没必要浪费时间")]),t._v(" "),a("p",[t._v("2、如果是删除，更新，查询，则先查找第一个数组，如果没找到，则再查询第二个数组。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRictPUUngUHIshLguZF60FLKfdBF2RCJmEFa0ibC37c3wcTrdZyGHh9w6Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("p",[t._v("如果你明白Java中HashSet是"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4NjI1OTI4Nw==&mid=2247485513&idx=1&sn=340e879f3197ae9e3d8789a1ad55a76e&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1),t._v("的简化版那么这个Set应该也理解了。都是一样的套路而已。这里你可以认为是没有Value的Dict。看源码 "),a("code",[t._v("t.set.c")]),t._v(" 就可以了解本质了。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTypeAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("robj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" robj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" llval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("encoding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" REDIS_ENCODING_HT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 看到底层调用的还是dictAdd，只不过第三个参数= NULL")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dictAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" DICT_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("incrRefCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"zset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zset"}},[t._v("#")]),t._v(" ZSet")]),t._v(" "),a("p",[t._v("范围查找 的天敌就是 有序集合，看底层 "),a("code",[t._v("redis.h")]),t._v(" 后就会发现 Zset用的就是可以跟二叉树媲美的"),a("code",[t._v("跳跃表")]),t._v("来实现有序。跳表就是多层"),a("strong",[t._v("链表")]),t._v("的结合体，跳表分为许多层(level)，每一层都可以看作是数据的"),a("strong",[t._v("索引")]),t._v("，"),a("strong",[t._v("这些索引的意义就是加快跳表查找数据速度")]),t._v("。")]),t._v(" "),a("p",[t._v("每一层的数据都是有序的，上一层数据是下一层数据的子集，并且第一层(level 1)包含了全部的数据；层次越高，跳跃性越大，包含的数据越少。并且随便插入一个数据该数据是否会是跳表索引完全随机的跟玩骰子一样。")]),t._v(" "),a("p",[t._v("跳表包含一个表头，它查找数据时，是"),a("code",[t._v("从上往下，从左往右")]),t._v("进行查找。现在找出值为37的节点为例，来对比说明跳表和普遍的链表。")]),t._v(" "),a("ol",[a("li",[t._v("没有跳表查询 比如我查询数据37，如果没有上面的索引时候路线如下图："),a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicWUGnibe3m19L0dNe3DMpMuJdQUCnQzzoNTHoOC0MlzTTFqOJXfdYiaGw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("li",[t._v("有跳表查询 有跳表查询37的时候路线如下图："),a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicg9m0y3mg1NQ7RnLPaoAjiaV2ePz06P5Y9jiaojiaY11ibiadygEBPVg2Asw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),t._v("应用场景：")])]),t._v(" "),a("blockquote",[a("p",[t._v("积分排行榜、时间排序新闻、延时队列。")])]),t._v(" "),a("h3",{attrs:{id:"hyperloglog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[t._v("#")]),t._v(" HyperLogLog")]),t._v(" "),a("p",[t._v("HyperLogLog ：是一种"),a("code",[t._v("概率")]),t._v("数据结构，它使用概率算法来统计集合的近似基数。而它算法的最本源则是"),a("code",[t._v("伯努利过程 + 分桶 + 调和平均数")]),t._v("。具体实现可看  HyperLogLog 讲解。")]),t._v(" "),a("p",[a("strong",[t._v("功能")]),t._v("：误差允许范围内做基数统计 (基数就是指一个集合中不同值的个数) 的时候非常有用，每个HyperLogLog的键可以计算接近"),a("strong",[t._v("2^64")]),t._v("不同元素的基数，而大小只需要12KB。错误率大概在0.81%。所以如果用做 UV 统计很合适。")]),t._v(" "),a("p",[t._v("HyperLogLog底层 一共分了 "),a("strong",[t._v("2^14")]),t._v(" 个桶，也就是 16384 个桶。每个(registers)桶中是一个 6 bit 的数组，这里有个骚操作就是一般人可能直接用一个字节当桶浪费2个bit空间，但是Redis底层只用6个然后通过前后拼接实现对内存用到了极致，最终就是 16384*6/8/1024 = 12KB。")]),t._v(" "),a("h3",{attrs:{id:"bitmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitmap"}},[t._v("#")]),t._v(" bitmap")]),t._v(" "),a("p",[t._v("BitMap 原本的含义是用一个比特位来映射某个元素的状态。由于一个比特位只能表示 0 和 1 两种状态，所以 BitMap 能映射的状态有限，但是使用比特位的优势是能大量的节省内存空间。")]),t._v(" "),a("p",[t._v("在 Redis 中BitMap 底层是基于字符串类型实现的，可以把 Bitmaps 想象成一个以比特位为单位的数组，数组的每个单元只能存储0和1，数组的下标在 Bitmaps 中叫做偏移量，BitMap 的 offset 值上限 "),a("strong",[t._v("2^32 - 1")]),t._v("。"),a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRic9gbIkzHhat4licrMDFto2EI9H4sv8fEib74SUZC90WP3YmsgibjoAjFiaA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("ol",[a("li",[t._v("用户签到")])]),t._v(" "),a("blockquote",[a("p",[t._v("key = 年份：用户id  offset = （今天是一年中的第几天） % （今年的天数）")])]),t._v(" "),a("ol",[a("li",[t._v("统计活跃用户")])]),t._v(" "),a("blockquote",[a("p",[t._v("使用日期作为 key，然后用户 id 为 offset 设置不同offset为0 1 即可。")])]),t._v(" "),a("p",[a("strong",[t._v("PS")]),t._v(" : Redis 它的通讯协议是基于TCP的应用层协议 RESP(REdis Serialization Protocol)。")]),t._v(" "),a("h3",{attrs:{id:"redis-geo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-geo"}},[t._v("#")]),t._v(" Redis Geo")]),t._v(" "),a("p",[t._v("他的核心思想就是将地球近似为球体来看待，然后 GEO利用 GeoHash 将二维的经纬度转换成字符串，来实现位置的划分跟指定距离的查询")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/wJvXicD0z2dX4ksecYaj2nLDUQtGalKRicFYicGibuzic9CrX7vDQkbEndv9pdGiaEiaL6zD1xNMKpEmQicTtezib4JBDOQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);